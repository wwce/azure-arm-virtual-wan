{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "This template is released under an as-is, best effort, and is community supported.",
        "author": "Matt McLimans (mmclimans@paloaltonetworks.com)"
    },
    "parameters": {

        "spokeNamePrefix": {
            "type": "string",
            "defaultValue": "wan-spoke100",
            "metadata": {
                "description": "Enter a naming prefix to append to the spoke resources created."
            }
        },
        "spokeVNETPrefix": {
            "type": "string",
            "defaultValue": "10.203.0.0/24",
            "metadata": {
                "description": "Enter a IP prefix for the spoke VNET."
            }
        },
        "spokeSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.203.0.0/28",
            "metadata": {
                "description": "Enter a IP prefix for the spoke VNET's subnet."
            }
        },
        "spokeUsername": {
            "type": "string",
            "defaultValue": "paloalto",
            "metadata": {
                "description": "Enter a username for the spoke test VM."
            }
        },
        "spokePassword": {
            "type": "securestring",
            "metadata": {
                "description": "Enter a password for the spoke test VM."
            }
        },
        "WANResourceGroup": {
            "type": "string",
            "defaultValue": "virtual-wan-rg",
            "metadata": {
                "description": "Name of the vWAN resource group."
            }
        },
        "HubName": {
            "type": "string",
            "defaultValue": "hub1",
            "metadata": {
                "description": "Name of an existing vWAN hub."
            }
        },
        "HubAssociatedRouteTable": {
            "type": "string",
            "defaultValue": "defaultRouteTable",
            "metadata": {
                "description": "The existing vWAN hub route table to associated with the security vNet connection."
            }
        }
    },
    "variables": {
        "global_resource_group": "[resourceGroup().name]",
        "global_apiVersion": "2019-09-01",
        "global_location": "[resourceGroup().location]",

        "spoke_prefix": "[parameters('spokeNamePrefix')]",
        "spoke_vnet_name": "[concat(variables('spoke_prefix'),'-vnet')]",
        "spoke_vnet_cidr": "[parameters('spokeVNETPrefix')]",
        "spoke_vnet_subnet0_name": "[concat(variables('spoke_prefix'),'-subnet0')]",
        "spoke_vnet_subnet0_cidr": "[parameters('spokeSubnetPrefix')]",
        "spoke_vm_apiVersion": "2018-06-01",
        "spoke_vm_user": "[parameters('spokeUsername')]",
        "spoke_vm_password": "[parameters('spokePassword')]",
        "spoke_vm_vmSize": "Standard_B1s",
        "spoke_vm_publisher": "Canonical",
        "spoke_vm_offer": "UbuntuServer",
        "spoke_vm_sku": "18.04-LTS",
        "spoke_vm_version": "latest",
        "spoke_vm_osType": "Linux",
        "spoke_vm_diskSizeGB": "30",
        "spoke_vm_diskType": "Standard_LRS",
        "spoke_vm_name": "[concat(variables('spoke_prefix'),'-vm')]",
        "spoke_vm_nic_name": "[concat(variables('spoke_prefix'), '-nic0')]",
        "spoke_vm_nsg_name": "[concat(variables('spoke_prefix'), '-nsg')]",

        "wan_rg": "[parameters('WANResourceGroup')]",
        "hub_name": "[parameters('HubName')]",
        "hub_connection_name": "[concat(variables('spoke_vnet_name'),'-conn')]",

        "hub_route_table_associated": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('hub_name'), parameters('HubAssociatedRouteTable'))]"


    },
    "resources": [
        {
            "comments": "CREATE VIRTUAL NETWORK WITH SUBNET",
            "type": "Microsoft.Resources/deployments",
            "name": "CREATE_VNET",
            "apiVersion": "[variables('global_apiVersion')]",
            "resourceGroup": "[variables('global_resource_group')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[variables('spoke_vnet_name')]",
                            "apiVersion": "[variables('global_apiVersion')]",
                            "location": "[variables('global_location')]",
                            "dependsOn": [],
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[variables('spoke_vnet_cidr')]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[variables('spoke_vnet_subnet0_name')]",
                                        "properties": {
                                            "addressPrefix": "[variables('spoke_vnet_subnet0_cidr')]"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "[variables('global_apiVersion')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('wan_rg')]",
            "name": "CREATE_HUB_CONNECTION",
            "dependsOn": [
                "CREATE_VNET"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {},
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
                            "apiVersion": "2020-05-01",
                            "name": "[concat(variables('hub_name'), '/', variables('hub_connection_name'))]",
                            "dependsOn": [],
                            "properties": {
                                "routingConfiguration": {
                                    "associatedRouteTable": {
                                        "id": "[variables('hub_route_table_associated')]"
                                    },
                                    "propagatedRouteTables": {
                                        "labels": [],
                                        "ids": [
                                            {
                                                "id": "[variables('hub_route_table_associated')]"
                                            }
                                        ]
                                    }
                                },
                                "remoteVirtualNetwork": {
                                    "id": "[concat(resourceId(variables('global_resource_group'), 'Microsoft.Network/virtualNetworks/', variables('spoke_vnet_name')))]"
                                },
                                "allowHubToRemoteVnetTransit": true,
                                "allowRemoteVnetToUseHubVnetGateways": true,
                                "enableInternetSecurity": true
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "comments": "CREATE VM",
            "type": "Microsoft.Resources/deployments",
            "name": "CREATE_VM",
            "apiVersion": "[variables('spoke_vm_apiVersion')]",
            "resourceGroup": "[variables('global_resource_group')]",
            "dependsOn": [
                "CREATE_VNET"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "name": "[variables('spoke_vm_nsg_name')]",
                            "apiVersion": "[variables('spoke_vm_apiVersion')]",
                            "location": "[variables('global_location')]",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "[concat(variables('spoke_vm_nsg_name'), '-in')]",
                                        "properties": {
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": "100",
                                            "direction": "Inbound",
                                            "sourcePortRanges": [],
                                            "destinationPortRanges": [],
                                            "sourceAddressPrefixes": [],
                                            "destinationAddressPrefixes": []
                                        }
                                    },
                                    {
                                        "name": "[concat(variables('spoke_vm_nsg_name'), '-out')]",
                                        "properties": {
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": "100",
                                            "direction": "Outbound",
                                            "sourcePortRanges": [],
                                            "destinationPortRanges": [],
                                            "sourceAddressPrefixes": [],
                                            "destinationAddressPrefixes": []
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "comments": "CREATE_NIC",
                            "type": "Microsoft.Network/networkInterfaces",
                            "name": "[variables('spoke_vm_nic_name')]",
                            "apiVersion": "[variables('spoke_vm_apiVersion')]",
                            "location": "[variables('global_location')]",
                            "dependsOn": [ "[resourceId('Microsoft.Network/networkSecurityGroups', variables('spoke_vm_nsg_name'))]" ],
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Dynamic",
                                            "subnet": {
                                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('spoke_vnet_name')), '/subnets/', variables('spoke_vnet_subnet0_name'))]"
                                            },
                                            "primary": true,
                                            "privateIPAddressVersion": "IPv4"
                                        }
                                    }
                                ],
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('spoke_vm_nsg_name'))]"
                                },
                                "enableIPForwarding": false
                            }
                        },
                        {
                            "comments": "CREATE_VM",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[variables('spoke_vm_name')]",
                            "apiVersion": "[variables('spoke_vm_apiVersion')]",
                            "location": "[variables('global_location')]",
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[variables('spoke_vm_vmSize')]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "[variables('spoke_vm_publisher')]",
                                        "offer": "[variables('spoke_vm_offer')]",
                                        "sku": "[variables('spoke_vm_sku')]",
                                        "version": "[variables('spoke_vm_version')]"
                                    },
                                    "osDisk": {
                                        "osType": "[variables('spoke_vm_osType')]",
                                        "createOption": "FromImage",
                                        "caching": "ReadWrite",
                                        "managedDisk": {
                                            "storageAccountType": "[variables('spoke_vm_diskType')]"
                                        },
                                        "diskSizeGB": "[variables('spoke_vm_diskSizeGB')]"
                                    }
                                },
                                "osProfile": {
                                    "computerName": "[variables('spoke_vm_name')]",
                                    "adminUsername": "[variables('spoke_vm_user')]",
                                    "adminPassword": "[variables('spoke_vm_password')]",
                                    "linuxConfiguration": {
                                        "disablePasswordAuthentication": false,
                                        "provisionVMAgent": true
                                    },
                                    "allowExtensionOperations": true
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('spoke_vm_nic_name'))]",
                                            "properties": {
                                                "primary": true
                                            }
                                        }
                                    ]
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('spoke_vm_nic_name'))]"
                            ]
                        }
                    ]
                }
            }
        }
    ]
}
